import time
import random
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options

chrome_options = Options()
chrome_options.add_argument("--headless")
driver = webdriver.Chrome(options=chrome_options)
# Function to generate random first and last names
def generate_random_name():
    first_names = ["John", "Jane", "Alice", "Bob", "Charlie", "Diana", "Eve", "Frank"]
    last_names = ["Smith", "Doe", "Johnson", "Williams", "Brown", "Jones", "Garcia", "Miller"]
    return random.choice(first_names), random.choice(last_names)

def save_email_to_file(email):
    with open("emails.txt", "a") as file:
        file.write(email + "\n")
for i in range(500):
    # Set up the WebDriver
    driver = webdriver.Chrome()  # Replace with the correct path to your WebDriver executable if needed
    wait = WebDriverWait(driver, 20)

    try:
        # Step 1: Open MEGA registration page
        mega_url = "https://mega.nz/register"
        driver.get(mega_url)

        # Step 2: Open a new tab and navigate to TempMailo
        temp_mail_url = "https://tempmailo.com/"
        driver.execute_script("window.open('');")  # Open a new tab
        driver.switch_to.window(driver.window_handles[1])  # Switch to the new tab
        driver.get(temp_mail_url)

        # Step 3: Extract the temporary email address
        email_field_xpath = "/html/body/main/div[2]/div/div[1]/div[1]/div/input"
        email_field = wait.until(EC.presence_of_element_located((By.XPATH, email_field_xpath)))
        email_address = email_field.get_attribute("value")

        # Step 4: Go back to MEGA registration page
        driver.switch_to.window(driver.window_handles[0])  # Switch back to the first tab

        # Wait for the registration form to load
        register_form_xpath = "//*[@id='register-firstname-registerpage2']"
        wait.until(EC.presence_of_element_located((By.XPATH, register_form_xpath)))

        # Generate random first and last names
        first_name, last_name = generate_random_name()

        # Step 5: Fill in the registration form using JavaScript
        driver.execute_script(f"""
            document.getElementById('register-firstname-registerpage2').value = '{first_name}';
            document.getElementById('register-lastname-registerpage2').value = '{last_name}';
            document.getElementById('register-email-registerpage2').value = '{email_address}';
            document.getElementById('register-password-registerpage2').value = '{email_address}';
            document.getElementById('register-password-registerpage3').value = '{email_address}';
        """)

        # Use the correct XPath to find the checkboxes (they might differ in the page structure)
        try:
            checkbox1 = driver.find_element(By.XPATH, "/html/body/div[6]/div[1]/div[2]/div[2]/div[2]/div[1]/form/div[8]/div[1]/input")  # checkbox 1
            checkbox1.click()
        except Exception as e:
            print("First checkbox not found:", e)
        try:
            checkbox2 = driver.find_element(By.XPATH, "/html/body/div[6]/div[1]/div[2]/div[2]/div[2]/div[1]/form/div[9]/div[1]/input") # checkbox 2
            checkbox2.click()
        except Exception as e:
            print("Second checkbox not found:", e)

        # Debugging and confirmation
        print("Form filled successfully:")
        print(f"First Name: {first_name}")
        print(f"Last Name: {last_name}")
        print(f"Email: {email_address}")

        # Submit the registration form
        driver.find_element(By.XPATH, "/html/body/div[6]/div[1]/div[2]/div[2]/div[2]/div[1]/form/button").click() # submit button to signup 

        # Step 6: Switch back to TempMailo tab
        driver.switch_to.window(driver.window_handles[1])               #html inside html
        driver.get(temp_mail_url)
        
        # Wait for the emails list to load
        email_list_xpath = "/html/body/main/div[2]/div/div[2]/div[1]/ul/li/div[1]"      # megalink path in tempmail
        
        # Loop to click the button until an email from MEGA is found

        while True:
            try:
                email_subject = wait.until(EC.presence_of_element_located((By.XPATH, email_list_xpath)))
                if "mega" in email_subject.text.strip().lower():
                    print("Email from MEGA found.")
                    # Click the email to open it
                    email_subject.click()
                    print('MAIL OPENED ')

                    iframe = driver.find_element(By.ID, "fullmessage")
                    driver.switch_to.frame(iframe)
                    # Wait for the email content to load and find the link
                    
                    email_link_xpath = "/html/body/table/tbody/tr[1]/td[2]/table/tbody/tr/td/table/tbody/tr/td/a"       #megalink path in tempmail
                    driver.find_element(By.XPATH, email_link_xpath).click()
                    
                    # Click the confirmation link password and click 
                   
                    driver.switch_to.window(driver.window_handles[2])
                    wait.until(EC.presence_of_element_located((By.XPATH,'/html/body/div[6]/div[1]/div[2]/div[2]/div[2]/div[1]/form/div[3]/input')))
                    driver.find_element(By.XPATH, '/html/body/div[6]/div[1]/div[2]/div[2]/div[2]/div[1]/form/div[3]/input').send_keys(email_address)
                    driver.find_element(By.XPATH, '/html/body/div[6]/div[1]/div[2]/div[2]/div[2]/div[1]/form/button').click()
                    save_email_to_file(email_address)
                    break
                else:
                    # If the email is not from MEGA, click the button again
                    button_xpath = "/html/body/main/div[2]/div/div[1]/div[2]/div[2]/button"         #button to refresh
                    button = driver.find_element(By.XPATH, button_xpath)
                    button.click()

                    

            except Exception as e:
                print("An error occurred while checking emails:", e)
                break


    except Exception as e:
        print("An error occurred:", e)

    finally:
        # Optionally, keep the browser open for debugging or close it
        time.sleep(5)  # Adjust this as needed
        driver.quit()
